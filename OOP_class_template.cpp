#include <iostream>
#include <string>
#include <fstream>

using namespace std;

// Шаблоны классов. Посмотреть #41 SimpleCode YouTube
// Шаблоны классов используются тогда, когда возникает необходимость, чтобы класс работал с несколькими типами данных
// Подобные классы также могут называться обобщенными классами


// Эта запись означает, что в этом классе будет использоваться неизветсный тип данных
// Тип данных будет известен в момент создания объекта класса

class Point
{
    public:
        Point()
        {
            x = y = z = 0;
        }

        Point(int x, int y, int z)
        {
            this -> x = x;
            this -> y = y;
            this -> z = z;
        }
    private:
        int x;
        int y;
        int z;
};

// Через запятую можно укзаать дополнительный обобщенный тип данных
// В данном случае это T2
// Это может быть полезно при необходимости установить два разных типа данных для обобщенного класса
// Вместо слова typename можно использовать class
template<typename T1, typename T2>
class MyClass
{
    public:

        MyClass(T1 value1, T2 value)
        {
            this -> value1 = value1;
            this -> value2 = value2;
        }
        // Функция, которая отправялет в терминал информацию о том, сколько места в памяти занимает переменная value
        void DataTypeSize()
        {
            cout << sizeof(value1) << endl;
            cout << sizeof(value2) << endl;
        }
    private:
        T1 value1;
        T2 value2;
};



int main()
{
    setlocale(LC_ALL, "ru");

    int a = 5;

    // Так как класс шаблонный, то в момент его объявления необходимо указать, с каким типом данных он будет работать
    // В ходе работы программы вместо типа переменной T используется тип int, который был указан при создании экземпляра класса
    // Грубо говоря T = int
    MyClass<int, int> c(a, a);
    c.DataTypeSize();


    // В качестве типа данных для T можно использовать и другой класс
    // Рассмотрим такой пример
    // В терминал будет выведено значения 12 байт, так как в теле класса указаны 3 переменных типа int
    Point J;
    MyClass<Point, Point> P(J, J);
    P.DataTypeSize();

    // Пример для разных типов данных шаблонного класса
    int u = 20;
    Point K;
    MyClass<int, Point> D(u, K);
    D.DataTypeSize();
    return 0;
}
